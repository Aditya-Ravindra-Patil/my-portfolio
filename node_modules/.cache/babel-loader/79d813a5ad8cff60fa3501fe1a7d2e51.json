{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nfunction loadImage(source) {\n  return new Promise(function (resolve, reject) {\n    if (!source) {\n      reject(\"Error tsParticles - No image.src\");\n      return;\n    }\n\n    var image = {\n      source: source,\n      type: source.substr(source.length - 3)\n    };\n    var img = new Image();\n    img.addEventListener(\"load\", function () {\n      image.element = img;\n      resolve(image);\n    });\n    img.addEventListener(\"error\", function () {\n      reject(\"Error tsParticles - loading image: \".concat(source));\n    });\n    img.src = source;\n  });\n}\n\nexports.loadImage = loadImage;\n\nfunction downloadSvgImage(_x) {\n  return _downloadSvgImage.apply(this, arguments);\n}\n\nfunction _downloadSvgImage() {\n  _downloadSvgImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n    var image, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (source) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(\"Error tsParticles - No image.src\");\n\n          case 2:\n            image = {\n              source: source,\n              type: source.substr(source.length - 3)\n            };\n\n            if (!(image.type !== \"svg\")) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", loadImage(source));\n\n          case 5:\n            _context.next = 7;\n            return fetch(image.source);\n\n          case 7:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"Error tsParticles - Image not found\");\n\n          case 10:\n            _context.next = 12;\n            return response.text();\n\n          case 12:\n            image.svgData = _context.sent;\n            return _context.abrupt(\"return\", image);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _downloadSvgImage.apply(this, arguments);\n}\n\nexports.downloadSvgImage = downloadSvgImage;\n\nfunction replaceColorSvg(imageShape, color, opacity) {\n  var svgData = imageShape.svgData;\n\n  if (!svgData) {\n    return \"\";\n  }\n\n  if (svgData.includes(\"fill\")) {\n    var currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n    return svgData.replace(currentColor, function () {\n      return (0, Utils_1.getStyleFromHsl)(color, opacity);\n    });\n  }\n\n  var preFillIndex = svgData.indexOf(\">\");\n  return \"\".concat(svgData.substring(0, preFillIndex), \" fill=\\\"\").concat((0, Utils_1.getStyleFromHsl)(color, opacity), \"\\\"\").concat(svgData.substring(preFillIndex));\n}\n\nexports.replaceColorSvg = replaceColorSvg;","map":{"version":3,"names":["Object","defineProperty","exports","value","replaceColorSvg","downloadSvgImage","loadImage","Utils_1","require","source","Promise","resolve","reject","image","type","substr","length","img","Image","addEventListener","element","src","Error","fetch","response","ok","text","svgData","imageShape","color","opacity","includes","currentColor","replace","getStyleFromHsl","preFillIndex","indexOf","substring"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Shapes/Image/Utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction loadImage(source) {\n    return new Promise((resolve, reject) => {\n        if (!source) {\n            reject(\"Error tsParticles - No image.src\");\n            return;\n        }\n        const image = {\n            source: source,\n            type: source.substr(source.length - 3),\n        };\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            resolve(image);\n        });\n        img.addEventListener(\"error\", () => {\n            reject(`Error tsParticles - loading image: ${source}`);\n        });\n        img.src = source;\n    });\n}\nexports.loadImage = loadImage;\nasync function downloadSvgImage(source) {\n    if (!source) {\n        throw new Error(\"Error tsParticles - No image.src\");\n    }\n    const image = {\n        source: source,\n        type: source.substr(source.length - 3),\n    };\n    if (image.type !== \"svg\") {\n        return loadImage(source);\n    }\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        throw new Error(\"Error tsParticles - Image not found\");\n    }\n    image.svgData = await response.text();\n    return image;\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    if (svgData.includes(\"fill\")) {\n        const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n        return svgData.replace(currentColor, () => (0, Utils_1.getStyleFromHsl)(color, opacity));\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${(0, Utils_1.getStyleFromHsl)(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n}\nexports.replaceColorSvg = replaceColorSvg;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}