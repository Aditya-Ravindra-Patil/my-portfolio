{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TiltUpdater = void 0;\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nfunction updateTilt(particle, delta) {\n  var _a;\n\n  if (!particle.tilt) {\n    return;\n  }\n\n  var tilt = particle.options.tilt;\n  var tiltAnimation = tilt.animation;\n  var speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  var max = 2 * Math.PI;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case Enums_1.AnimationStatus.increasing:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case Enums_1.AnimationStatus.decreasing:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n}\n\nvar TiltUpdater = /*#__PURE__*/function () {\n  function TiltUpdater(container) {\n    _classCallCheck(this, TiltUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(TiltUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var tiltOptions = particle.options.tilt;\n      particle.tilt = {\n        enable: tiltOptions.enable,\n        value: (0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI / 180,\n        sinDirection: Math.random() >= 0.5 ? 1 : -1,\n        cosDirection: Math.random() >= 0.5 ? 1 : -1\n      };\n      var tiltDirection = tiltOptions.direction;\n\n      if (tiltDirection === Enums_1.TiltDirection.random) {\n        var index = Math.floor(Math.random() * 2);\n        tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n      }\n\n      switch (tiltDirection) {\n        case Enums_1.TiltDirection.counterClockwise:\n        case \"counterClockwise\":\n          particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n          break;\n\n        case Enums_1.TiltDirection.clockwise:\n          particle.tilt.status = Enums_1.AnimationStatus.increasing;\n          break;\n      }\n\n      var tiltAnimation = particle.options.tilt.animation;\n\n      if (tiltAnimation.enable) {\n        particle.tilt.velocity = tiltAnimation.speed / 360 * this.container.retina.reduceFactor;\n\n        if (!tiltAnimation.sync) {\n          particle.tilt.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var tilt = particle.options.tilt;\n      var tiltAnimation = tilt.animation;\n      return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateTilt(particle, delta);\n    }\n  }]);\n\n  return TiltUpdater;\n}();\n\nexports.TiltUpdater = TiltUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","TiltUpdater","Enums_1","require","Utils_1","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","AnimationStatus","increasing","decreasing","container","tiltOptions","getRangeValue","sinDirection","random","cosDirection","tiltDirection","direction","TiltDirection","index","floor","counterClockwise","clockwise","retina","reduceFactor","sync","destroyed","spawning","isEnabled"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Updaters/Tilt/TiltUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TiltUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case Enums_1.AnimationStatus.increasing:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case Enums_1.AnimationStatus.decreasing:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nclass TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: ((0, Utils_1.getRangeValue)(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === Enums_1.TiltDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? Enums_1.TiltDirection.counterClockwise : Enums_1.TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case Enums_1.TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.TiltDirection.clockwise:\n                particle.tilt.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = (tiltAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\nexports.TiltUpdater = TiltUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}