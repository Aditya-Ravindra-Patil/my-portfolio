{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar Enums_1 = require(\"../../../Enums\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\n\nvar ProcessBubbleType_1 = require(\"./ProcessBubbleType\");\n\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    var value = particleValue + (modeValue - optionsValue) * ratio;\n    return (0, Utils_1.clamp)(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _value = particleValue - (optionsValue - modeValue) * ratio;\n\n    return (0, Utils_1.clamp)(_value, modeValue, particleValue);\n  }\n}\n\nvar Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n\n  var _super = _createSuper(Bubbler);\n\n  function Bubbler(container) {\n    _classCallCheck(this, Bubbler);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events,\n          divs = events.onDiv,\n          divBubble = (0, Utils_1.isDivModeEnabled)(Enums_1.DivMode.bubble, divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return (0, Utils_1.isInArray)(Enums_1.HoverMode.bubble, hoverMode) || (0, Utils_1.isInArray)(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!(!particle.bubble.inRange || force)) {\n        return;\n      }\n\n      delete particle.bubble.div;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var options = this.container.actualOptions,\n          events = options.interactivity.events,\n          onHover = events.onHover,\n          onClick = events.onClick,\n          hoverEnabled = onHover.enable,\n          hoverMode = onHover.mode,\n          clickEnabled = onClick.enable,\n          clickMode = onClick.mode,\n          divs = events.onDiv;\n\n      if (hoverEnabled && (0, Utils_1.isInArray)(Enums_1.HoverMode.bubble, hoverMode)) {\n        this.hoverBubble();\n      } else if (clickEnabled && (0, Utils_1.isInArray)(Enums_1.ClickMode.bubble, clickMode)) {\n        this.clickBubble();\n      } else {\n        (0, Utils_1.divModeExecute)(Enums_1.DivMode.bubble, divs, function (selector, div) {\n          return _this.singleSelectorHover(selector, div);\n        });\n      }\n    }\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this2 = this;\n\n      var container = this.container,\n          selectors = document.querySelectorAll(selector);\n\n      if (!selectors.length) {\n        return;\n      }\n\n      selectors.forEach(function (item) {\n        var elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            query = container.particles.quadTree.query(area);\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = (0, Utils_1.divMode)(divs, elem);\n\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this2.reset(particle, true);\n\n              particle.bubble.div = elem;\n            }\n\n            _this2.hoverBubbleSize(particle, 1, divBubble);\n\n            _this2.hoverBubbleOpacity(particle, 1, divBubble);\n\n            _this2.hoverBubbleColor(particle, 1, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container,\n          bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      var options = container.actualOptions,\n          bubbleDuration = options.interactivity.modes.bubble.duration,\n          bubbleDistance = container.retina.bubbleModeDistance,\n          particlesParam = data.particlesObj.optValue,\n          pObjBubble = data.bubbleObj.value,\n          pObj = data.particlesObj.value || 0,\n          type = data.type;\n\n      if (bubbleParam === particlesParam) {\n        return;\n      }\n\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n              particle.bubble.radius = value;\n            }\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n          delete particle.bubble.radius;\n        }\n\n        if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _a, _b;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (!mouseClickPos) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          if (!container.bubble.clicking) {\n            continue;\n          }\n\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition(),\n              distMouse = (0, Utils_1.getDistance)(pos, mouseClickPos),\n              timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: (0, Utils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: ProcessBubbleType_1.ProcessBubbleType.size\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: (0, Utils_1.getRangeMax)(particle.options.opacity.value),\n              value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            },\n            type: ProcessBubbleType_1.ProcessBubbleType.opacity\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle, distMouse);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n      var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition(),\n              pointDistance = (0, Utils_1.getDistance)(pos, mousePos),\n              ratio = 1 - pointDistance / distance;\n\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle, ratio);\n            }\n          } else {\n            this.reset(particle);\n          }\n\n          if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container,\n          modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      var optSize = (0, Utils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a, _b, _c;\n\n      var container = this.container,\n          options = container.actualOptions,\n          modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (!modeOpacity) {\n        return;\n      }\n\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, Utils_1.getRangeMax)(optOpacity), ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, ratio, divBubble) {\n      var options = this.container.actualOptions;\n      var bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n\n      if (!particle.bubble.finalColor) {\n        var modeColor = bubbleOptions.color;\n\n        if (!modeColor) {\n          return;\n        }\n\n        var bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n        particle.bubble.finalColor = (0, Utils_1.colorToHsl)(bubbleColor);\n      }\n\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        var pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? (0, Utils_1.rgbToHsl)((0, Utils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    }\n  }]);\n\n  return Bubbler;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Bubbler = Bubbler;","map":{"version":3,"names":["Object","defineProperty","exports","value","Bubbler","Utils_1","require","Enums_1","ExternalInteractorBase_1","ProcessBubbleType_1","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","clamp","container","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","isDivModeEnabled","DivMode","bubble","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","particle","force","inRange","div","opacity","radius","color","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","selector","singleSelectorHover","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","query","particles","quadTree","contains","getPosition","modes","divMode","reset","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","ProcessBubbleType","size","_a","_b","mouseClickPos","distance","queryCircle","clicking","getDistance","Date","getTime","clickTime","sizeData","bubbleModeSize","getRangeMax","process","opacityData","mousePos","pointDistance","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","_c","modeOpacity","optOpacity","pOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","itemFromArray","colorToHsl","mix","pColor","getFillColor","rgbToHsl","colorMix","ExternalInteractorBase"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Interactions/External/Bubble/Bubbler.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst Enums_1 = require(\"../../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nconst ProcessBubbleType_1 = require(\"./ProcessBubbleType\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return (0, Utils_1.clamp)(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return (0, Utils_1.clamp)(value, modeValue, particleValue);\n    }\n}\nclass Bubbler extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divBubble = (0, Utils_1.isDivModeEnabled)(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(Enums_1.HoverMode.bubble, hoverMode) || (0, Utils_1.isInArray)(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!(!particle.bubble.inRange || force)) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && (0, Utils_1.isInArray)(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            (0, Utils_1.divModeExecute)(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = (0, Utils_1.divMode)(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                delete particle.bubble.radius;\n            }\n            if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = (0, Utils_1.getDistance)(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: (0, Utils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: ProcessBubbleType_1.ProcessBubbleType.size,\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: (0, Utils_1.getRangeMax)(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: ProcessBubbleType_1.ProcessBubbleType.opacity,\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = (0, Utils_1.getDistance)(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = (0, Utils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, Utils_1.getRangeMax)(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n            particle.bubble.finalColor = (0, Utils_1.colorToHsl)(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? (0, Utils_1.rgbToHsl)((0, Utils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}