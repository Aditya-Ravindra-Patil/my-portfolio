{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Vector_1 = require(\"../../Core/Particle/Vector\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n\n    var _a, _b, _c, _d, _e;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n    this.options = options;\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = (0, Utils_1.getRangeValue)(options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density * container.retina.reduceFactor;\n    var limit = options.size.limit;\n    this.limit = typeof limit === \"number\" ? {\n      radius: limit * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: 0\n    } : {\n      radius: ((_a = limit === null || limit === void 0 ? void 0 : limit.radius) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: (_b = limit === null || limit === void 0 ? void 0 : limit.mass) !== null && _b !== void 0 ? _b : 0\n    };\n    var color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_c = (0, Utils_1.colorToRgb)(color)) !== null && _c !== void 0 ? _c : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_e = (_d = this.initialPosition) === null || _d === void 0 ? void 0 : _d.copy()) !== null && _e !== void 0 ? _e : this.calcPosition();\n  }\n\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container;\n      var options = this.options;\n\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = (0, Utils_1.getDistance)(this.position, mouse.downPosition);\n\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n\n      var pos = particle.getPosition();\n\n      var _ref = (0, Utils_1.getDistances)(this.position, pos),\n          dx = _ref.dx,\n          dy = _ref.dy,\n          distance = _ref.distance;\n\n      var v = Vector_1.Vector.create(dx, dy);\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n\n          this.updateParticlePosition(particle, v);\n        }\n\n        if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n          this.size += sizeFactor;\n        }\n\n        if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n          this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = (0, Utils_1.getStyleFromRgb)(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var _a, _b;\n\n      var container = this.container;\n      var percentPosition = this.options.position;\n      return Vector_1.Vector.create(((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width, ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      var container = this.container;\n      var canvasSize = container.canvas.size;\n\n      if (particle.needsNewPosition) {\n        particle.position.x = Math.floor(Math.random() * canvasSize.width);\n        particle.position.y = Math.floor(Math.random() * canvasSize.height);\n        particle.velocity.setTo(particle.initialVelocity);\n        particle.absorberOrbit = undefined;\n        particle.needsNewPosition = false;\n      }\n\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n          particle.absorberOrbit.length = (0, Utils_1.getDistance)(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n        }\n\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n        }\n\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n        }\n\n        var orbitRadius = particle.absorberOrbit.length;\n        var orbitAngle = particle.absorberOrbit.angle;\n        var orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        var updateFunc = {\n          x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n          y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector_1.Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n\n  return AbsorberInstance;\n}();\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","Vector_1","Enums_1","absorbers","container","options","position","_a","_b","_c","_d","_e","initialPosition","Vector","create","x","y","undefined","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","colorToRgb","b","g","r","copy","calcPosition","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","isPointInside","canvas","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","random","width","height","destroyed","canvasSize","floor","velocity","setTo","initialVelocity","orbits","angle","minSize","min","absorberOrbitDirection","RotateDirection","clockwise","counterClockwise","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","moveSpeed","addV","origin","addTo"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nconst Enums_1 = require(\"../../Enums\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c, _d, _e;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = (0, Utils_1.getRangeValue)(options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit =\n            typeof limit === \"number\"\n                ? {\n                    radius: limit * container.retina.pixelRatio * container.retina.reduceFactor,\n                    mass: 0,\n                }\n                : {\n                    radius: ((_a = limit === null || limit === void 0 ? void 0 : limit.radius) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio * container.retina.reduceFactor,\n                    mass: (_b = limit === null || limit === void 0 ? void 0 : limit.mass) !== null && _b !== void 0 ? _b : 0,\n                };\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_c = (0, Utils_1.colorToRgb)(color)) !== null && _c !== void 0 ? _c : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_e = (_d = this.initialPosition) === null || _d === void 0 ? void 0 : _d.copy()) !== null && _e !== void 0 ? _e : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container;\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = (0, Utils_1.getDistance)(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = (0, Utils_1.getDistances)(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = (0, Utils_1.getStyleFromRgb)(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            particle.position.x = Math.floor(Math.random() * canvasSize.width);\n            particle.position.y = Math.floor(Math.random() * canvasSize.height);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = (0, Utils_1.getDistance)(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n            }\n            const orbitRadius = particle.absorberOrbit.length;\n            const orbitAngle = particle.absorberOrbit.angle;\n            const orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            const updateFunc = {\n                x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n                y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}