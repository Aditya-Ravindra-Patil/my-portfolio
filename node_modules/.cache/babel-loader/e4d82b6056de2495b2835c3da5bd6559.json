{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = void 0;\nvar plugins = [];\nvar interactorsInitializers = new Map();\nvar updatersInitializers = new Map();\nvar interactors = new Map();\nvar updaters = new Map();\nvar presets = new Map();\nvar drawers = new Map();\nvar pathGenerators = new Map();\n\nvar Plugins = /*#__PURE__*/function () {\n  function Plugins() {\n    _classCallCheck(this, Plugins);\n  }\n\n  _createClass(Plugins, null, [{\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!Plugins.getPlugin(plugin.id)) {\n        plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n\n      var _iterator = _createForOfIteratorHelper(plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(plugins),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return presets.get(preset);\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (override || !Plugins.getPreset(presetKey)) {\n        presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(type, drawer) {\n      if (!Plugins.getShapeDrawer(type)) {\n        drawers.set(type, drawer);\n      }\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return drawers.keys();\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return pathGenerators.get(type);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!Plugins.getPathGenerator(type)) {\n        pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = interactors.get(container);\n\n      if (!res || force) {\n        res = _toConsumableArray(interactorsInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        interactors.set(container, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      interactorsInitializers.set(name, initInteractor);\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = updaters.get(container);\n\n      if (!res || force) {\n        res = _toConsumableArray(updatersInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        updaters.set(container, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      updatersInitializers.set(name, initUpdater);\n    }\n  }]);\n\n  return Plugins;\n}();\n\nexports.Plugins = Plugins;","map":{"version":3,"names":["Object","defineProperty","exports","value","Plugins","plugins","interactorsInitializers","Map","updatersInitializers","interactors","updaters","presets","drawers","pathGenerators","plugin","find","t","id","getPlugin","push","container","res","needsPlugin","actualOptions","set","options","sourceOptions","loadOptions","preset","get","presetKey","override","getPreset","type","drawer","getShapeDrawer","keys","pathGenerator","getPathGenerator","force","values","map","name","initInteractor","initUpdater"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Utils/Plugins.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options, override = false) {\n        if (override || !Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n    static getInteractors(container, force = false) {\n        let res = interactors.get(container);\n        if (!res || force) {\n            res = [...interactorsInitializers.values()].map((t) => t(container));\n            interactors.set(container, res);\n        }\n        return res;\n    }\n    static addInteractor(name, initInteractor) {\n        interactorsInitializers.set(name, initInteractor);\n    }\n    static getUpdaters(container, force = false) {\n        let res = updaters.get(container);\n        if (!res || force) {\n            res = [...updatersInitializers.values()].map((t) => t(container));\n            updaters.set(container, res);\n        }\n        return res;\n    }\n    static addParticleUpdater(name, initUpdater) {\n        updatersInitializers.set(name, initUpdater);\n    }\n}\nexports.Plugins = Plugins;\n"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAMC,OAAO,GAAG,EAAhB;AACA,IAAMC,uBAAuB,GAAG,IAAIC,GAAJ,EAAhC;AACA,IAAMC,oBAAoB,GAAG,IAAID,GAAJ,EAA7B;AACA,IAAME,WAAW,GAAG,IAAIF,GAAJ,EAApB;AACA,IAAMG,QAAQ,GAAG,IAAIH,GAAJ,EAAjB;AACA,IAAMI,OAAO,GAAG,IAAIJ,GAAJ,EAAhB;AACA,IAAMK,OAAO,GAAG,IAAIL,GAAJ,EAAhB;AACA,IAAMM,cAAc,GAAG,IAAIN,GAAJ,EAAvB;;IACMH,O;;;;;;;WACF,mBAAiBU,MAAjB,EAAyB;MACrB,OAAOT,OAAO,CAACU,IAAR,CAAa,UAACC,CAAD;QAAA,OAAOA,CAAC,CAACC,EAAF,KAASH,MAAhB;MAAA,CAAb,CAAP;IACH;;;WACD,mBAAiBA,MAAjB,EAAyB;MACrB,IAAI,CAACV,OAAO,CAACc,SAAR,CAAkBJ,MAAM,CAACG,EAAzB,CAAL,EAAmC;QAC/BZ,OAAO,CAACc,IAAR,CAAaL,MAAb;MACH;IACJ;;;WACD,6BAA2BM,SAA3B,EAAsC;MAClC,IAAMC,GAAG,GAAG,IAAId,GAAJ,EAAZ;;MADkC,2CAEbF,OAFa;MAAA;;MAAA;QAElC,oDAA8B;UAAA,IAAnBS,MAAmB;;UAC1B,IAAI,CAACA,MAAM,CAACQ,WAAP,CAAmBF,SAAS,CAACG,aAA7B,CAAL,EAAkD;YAC9C;UACH;;UACDF,GAAG,CAACG,GAAJ,CAAQV,MAAM,CAACG,EAAf,EAAmBH,MAAM,CAACI,SAAP,CAAiBE,SAAjB,CAAnB;QACH;MAPiC;QAAA;MAAA;QAAA;MAAA;;MAQlC,OAAOC,GAAP;IACH;;;WACD,qBAAmBI,OAAnB,EAA4BC,aAA5B,EAA2C;MAAA,4CAClBrB,OADkB;MAAA;;MAAA;QACvC,uDAA8B;UAAA,IAAnBS,MAAmB;UAC1BA,MAAM,CAACa,WAAP,CAAmBF,OAAnB,EAA4BC,aAA5B;QACH;MAHsC;QAAA;MAAA;QAAA;MAAA;IAI1C;;;WACD,mBAAiBE,MAAjB,EAAyB;MACrB,OAAOjB,OAAO,CAACkB,GAAR,CAAYD,MAAZ,CAAP;IACH;;;WACD,mBAAiBE,SAAjB,EAA4BL,OAA5B,EAAuD;MAAA,IAAlBM,QAAkB,uEAAP,KAAO;;MACnD,IAAIA,QAAQ,IAAI,CAAC3B,OAAO,CAAC4B,SAAR,CAAkBF,SAAlB,CAAjB,EAA+C;QAC3CnB,OAAO,CAACa,GAAR,CAAYM,SAAZ,EAAuBL,OAAvB;MACH;IACJ;;;WACD,wBAAsBQ,IAAtB,EAA4BC,MAA5B,EAAoC;MAChC,IAAI,CAAC9B,OAAO,CAAC+B,cAAR,CAAuBF,IAAvB,CAAL,EAAmC;QAC/BrB,OAAO,CAACY,GAAR,CAAYS,IAAZ,EAAkBC,MAAlB;MACH;IACJ;;;WACD,wBAAsBD,IAAtB,EAA4B;MACxB,OAAOrB,OAAO,CAACiB,GAAR,CAAYI,IAAZ,CAAP;IACH;;;WACD,8BAA4B;MACxB,OAAOrB,OAAO,CAACwB,IAAR,EAAP;IACH;;;WACD,0BAAwBH,IAAxB,EAA8B;MAC1B,OAAOpB,cAAc,CAACgB,GAAf,CAAmBI,IAAnB,CAAP;IACH;;;WACD,0BAAwBA,IAAxB,EAA8BI,aAA9B,EAA6C;MACzC,IAAI,CAACjC,OAAO,CAACkC,gBAAR,CAAyBL,IAAzB,CAAL,EAAqC;QACjCpB,cAAc,CAACW,GAAf,CAAmBS,IAAnB,EAAyBI,aAAzB;MACH;IACJ;;;WACD,wBAAsBjB,SAAtB,EAAgD;MAAA,IAAfmB,KAAe,uEAAP,KAAO;MAC5C,IAAIlB,GAAG,GAAGZ,WAAW,CAACoB,GAAZ,CAAgBT,SAAhB,CAAV;;MACA,IAAI,CAACC,GAAD,IAAQkB,KAAZ,EAAmB;QACflB,GAAG,GAAG,mBAAIf,uBAAuB,CAACkC,MAAxB,EAAJ,EAAsCC,GAAtC,CAA0C,UAACzB,CAAD;UAAA,OAAOA,CAAC,CAACI,SAAD,CAAR;QAAA,CAA1C,CAAN;QACAX,WAAW,CAACe,GAAZ,CAAgBJ,SAAhB,EAA2BC,GAA3B;MACH;;MACD,OAAOA,GAAP;IACH;;;WACD,uBAAqBqB,IAArB,EAA2BC,cAA3B,EAA2C;MACvCrC,uBAAuB,CAACkB,GAAxB,CAA4BkB,IAA5B,EAAkCC,cAAlC;IACH;;;WACD,qBAAmBvB,SAAnB,EAA6C;MAAA,IAAfmB,KAAe,uEAAP,KAAO;MACzC,IAAIlB,GAAG,GAAGX,QAAQ,CAACmB,GAAT,CAAaT,SAAb,CAAV;;MACA,IAAI,CAACC,GAAD,IAAQkB,KAAZ,EAAmB;QACflB,GAAG,GAAG,mBAAIb,oBAAoB,CAACgC,MAArB,EAAJ,EAAmCC,GAAnC,CAAuC,UAACzB,CAAD;UAAA,OAAOA,CAAC,CAACI,SAAD,CAAR;QAAA,CAAvC,CAAN;QACAV,QAAQ,CAACc,GAAT,CAAaJ,SAAb,EAAwBC,GAAxB;MACH;;MACD,OAAOA,GAAP;IACH;;;WACD,4BAA0BqB,IAA1B,EAAgCE,WAAhC,EAA6C;MACzCpC,oBAAoB,CAACgB,GAArB,CAAyBkB,IAAzB,EAA+BE,WAA/B;IACH;;;;;;AAEL1C,OAAO,CAACE,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}