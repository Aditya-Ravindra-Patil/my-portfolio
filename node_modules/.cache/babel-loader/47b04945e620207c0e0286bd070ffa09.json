{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QuadTree = void 0;\n\nvar Rectangle_1 = require(\"./Rectangle\");\n\nvar Circle_1 = require(\"./Circle\");\n\nvar CircleWarp_1 = require(\"./CircleWarp\");\n\nvar NumberUtils_1 = require(\"./NumberUtils\");\n\nvar QuadTree = /*#__PURE__*/function () {\n  function QuadTree(rectangle, capacity) {\n    _classCallCheck(this, QuadTree);\n\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n\n  _createClass(QuadTree, [{\n    key: \"subdivide\",\n    value: function subdivide() {\n      var x = this.rectangle.position.x;\n      var y = this.rectangle.position.y;\n      var w = this.rectangle.size.width;\n      var h = this.rectangle.size.height;\n      var capacity = this.capacity;\n      this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n      this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n      this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n      this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n      this.divided = true;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(point) {\n      var _a, _b, _c, _d, _e;\n\n      if (!this.rectangle.contains(point.position)) {\n        return false;\n      }\n\n      if (this.points.length < this.capacity) {\n        this.points.push(point);\n        return true;\n      }\n\n      if (!this.divided) {\n        this.subdivide();\n      }\n\n      return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n    }\n  }, {\n    key: \"queryCircle\",\n    value: function queryCircle(position, radius) {\n      return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n  }, {\n    key: \"queryCircleWarp\",\n    value: function queryCircleWarp(position, radius, containerOrSize) {\n      var container = containerOrSize;\n      var size = containerOrSize;\n      return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n  }, {\n    key: \"queryRectangle\",\n    value: function queryRectangle(position, size) {\n      return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n  }, {\n    key: \"query\",\n    value: function query(range, found) {\n      var _a, _b, _c, _d;\n\n      var res = found !== null && found !== void 0 ? found : [];\n\n      if (!range.intersects(this.rectangle)) {\n        return [];\n      } else {\n        var _iterator = _createForOfIteratorHelper(this.points),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var p = _step.value;\n\n            if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n              continue;\n            }\n\n            res.push(p.particle);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (this.divided) {\n          (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n          (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n          (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n          (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n        }\n      }\n\n      return res;\n    }\n  }]);\n\n  return QuadTree;\n}();\n\nexports.QuadTree = QuadTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","QuadTree","Rectangle_1","require","Circle_1","CircleWarp_1","NumberUtils_1","rectangle","capacity","points","divided","x","position","y","w","size","width","h","height","northEast","Rectangle","northWest","southEast","southWest","point","_a","_b","_c","_d","_e","contains","length","push","subdivide","insert","radius","query","Circle","containerOrSize","container","CircleWarp","canvas","undefined","range","found","res","intersects","p","getDistance","particle","getRadius"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Utils/QuadTree.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position) && (0, NumberUtils_1.getDistance)(range.position, p.position) > p.particle.getRadius()) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}