{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"E:/MERN/Portfolio-website-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar Enums_1 = require(\"../../../Enums\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\n\nvar Grabber = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Grabber, _ExternalInteractorBa);\n\n  var _super = _createSuper(Grabber);\n\n  function Grabber(container) {\n    _classCallCheck(this, Grabber);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Grabber, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          mouse = container.interactivity.mouse,\n          events = container.actualOptions.interactivity.events;\n      return events.onHover.enable && !!mouse.position && (0, Utils_1.isInArray)(Enums_1.HoverMode.grab, events.onHover.mode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          interactivity = options.interactivity;\n\n      if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n        var mousePos = container.interactivity.mouse.position;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var distance = container.retina.grabModeDistance,\n            query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n            var pos = particle.getPosition(),\n                pointDistance = (0, Utils_1.getDistance)(pos, mousePos);\n\n            if (pointDistance <= distance) {\n              var grabLineOptions = interactivity.modes.grab.links,\n                  lineOpacity = grabLineOptions.opacity,\n                  opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n              if (opacityLine <= 0) {\n                continue;\n              }\n\n              var optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n\n              if (!container.particles.grabLineColor) {\n                var linksOptions = options.interactivity.modes.grab.links;\n                container.particles.grabLineColor = (0, Utils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n              }\n\n              var colorLine = (0, Utils_1.getLinkColor)(particle, undefined, container.particles.grabLineColor);\n\n              if (!colorLine) {\n                return;\n              }\n\n              container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }]);\n\n  return Grabber;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Grabber = Grabber;","map":{"version":3,"names":["Object","defineProperty","exports","value","Grabber","Utils_1","require","Enums_1","ExternalInteractorBase_1","container","mouse","interactivity","events","actualOptions","onHover","enable","position","isInArray","HoverMode","grab","mode","_a","options","status","Constants","mouseMoveEvent","mousePos","distance","retina","grabModeDistance","query","particles","quadTree","queryCircle","particle","pos","getPosition","pointDistance","getDistance","grabLineOptions","modes","links","lineOpacity","opacity","opacityLine","optColor","color","grabLineColor","linksOptions","getLinkRandomColor","blink","consent","colorLine","getLinkColor","undefined","canvas","drawGrabLine","ExternalInteractorBase"],"sources":["E:/MERN/Portfolio-website-main/node_modules/tsparticles/Interactions/External/Grab/Grabber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst Enums_1 = require(\"../../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, mouse = container.interactivity.mouse, events = container.actualOptions.interactivity.events;\n        return events.onHover.enable && !!mouse.position && (0, Utils_1.isInArray)(Enums_1.HoverMode.grab, events.onHover.mode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition(), pointDistance = (0, Utils_1.getDistance)(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine <= 0) {\n                        continue;\n                    }\n                    const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                    if (!container.particles.grabLineColor) {\n                        const linksOptions = options.interactivity.modes.grab.links;\n                        container.particles.grabLineColor = (0, Utils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n                    }\n                    const colorLine = (0, Utils_1.getLinkColor)(particle, undefined, container.particles.grabLineColor);\n                    if (!colorLine) {\n                        return;\n                    }\n                    container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}